#!/bin/bash
name="${NAME}"
if [[ -z "$name" ]]; then
  name=$(grep '^Source:' debian/control|head -n1|cut -d ' ' -f 2)
fi

dist=$1
version="$2"
gpg_agent_socket=$(gpgconf --list-dirs agent-socket)
gpg_user="$GPGUSER"
if [[ -z "$gpg_user" ]]; then
  gpg_user=$(gpg --list-secret-keys --with-colons|grep '^fpr:'|head -n1|cut -d: -f10)
fi

if [ x"$version" = x"" ]; then
  echo "Usage: $0 <dist> <version>"
  echo "NAME=${name}"
  echo "GPGUSER=${gpg_user}"
  echo "gpg_agent_socket=${gpg_agent_socket}"
  exit 1
fi

image_tag=debuild-${name}-${dist}

set -ex
here="$(pwd)"
mkdir -p debian/out
docker build -f debian/Dockerfile.${dist} -t "$image_tag" "${here}/debian"
source_archive="${name}_${version}.orig.tar.gz"
git archive --format=tar --prefix "${name}-${version}/" "upstream/${version}" | gzip > "debian/out/$source_archive"

gpg_public_key=/tmp/debuild-${name}-${dist}-pub.asc
gpg --export "$gpg_user" >  $gpg_public_key
trap "rm $gpg_public_key" EXIT

# Unlock GPG secret key when necessary
export GPG_TTY=$(tty)
echo | gpg -u "${gpg_user}" --clearsign --output /dev/null

bootstrap_cmds=$(mktemp)
cat >${bootstrap_cmds} <<-EOF
useradd -u $(id -u) -m buildbot
chown buildbot:buildbot /home/buildbot
chown buildbot:buildbot /home/buildbot/.gnupg
chown buildbot:buildbot /build
cp /run.sh /run2.sh
chown buildbot:buildbot /run2.sh

su buildbot -c 'bash -xe /run2.sh'

cp -pv /build/*.{deb,debian.tar.xz,dsc,changes} /output/
cp -v /build/*/debian/*.symbols /output/
chown $(id -u):$(id -g) /output/*
EOF

cmds=$(mktemp)
cat >${cmds} <<-EOF
gpg2 --import < /pub.asc
export DEBSIGN_KEYID=0x\$(gpg2 --with-colons --list-keys|grep '^sub:'|head|cut -d: -f 5)

cd /build
tar xf /output/${source_archive}
ln -s /output/${source_archive} /build/
cd "${name}-${version}"
cp -a /debian .
rm -rf ./debian/out

sed -i -e 's/_dist_/${dist}/g' debian/changelog
sed -i -e 's/unstable; urgency=/${dist}; urgency=/g' debian/changelog

debuild -pgpg2
EOF


docker run \
  --privileged \
  --net=host \
  --tty \
  --interactive \
  --volume "${gpg_public_key}:/pub.asc" \
  --volume "${here}/debian:/debian:ro" \
  --volume "${here}/debian/out:/output" \
  --volume "${gpg_agent_socket}:/home/buildbot/.gnupg/S.gpg-agent" \
  --volume "${cmds}:/run.sh:ro" \
  --volume "${bootstrap_cmds}:/bootstrap.sh:ro" \
  --workdir /build \
  "$image_tag" \
  bash -xe /bootstrap.sh

cp -v debian/out/*.symbols debian/ || :
